# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    app.path.images: /uploads/images/products
    secret: '%env(APP_SECRET)%'
    projectRoot: '%kernel.root_dir%'
    defaultEmail: '%env(DEFAULT_EMAIL)%'
    cronToken: '%env(CRON_TOKEN)%'
    cronIPAdress: '%env(CRON_IPADRESS)%'
    KEYCLOAK_URL: '%env(OAUTH_KEYCLOAK_SERVER)%'
    KEYCLOAK_REALM: '%env(OAUTH_KEYCLOAK_REALM)%'
    KEYCLOAK_SECRETE: '%env(OAUTH_KEYCLOAK_CLIENT_SECRET)%'
    KEYCLOAK_ID: '%env(OAUTH_KEYCLOAK_CLIENT_ID)%'
    registerEmailName: '%env(registerEmailName)%'
    default_jitsi_server_id: '%env(default_jitsi_server_id)%'
    laF_startpage: '%env(laF_startpage)%'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    dpolac.twig_lambda.extension:
        class: DPolac\TwigLambda\LambdaExtension
        tags: [ { name: twig.extension } ]
