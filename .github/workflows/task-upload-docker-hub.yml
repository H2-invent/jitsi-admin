# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Build and Publish Docker Image

on:
  workflow_call:
    inputs:
      reponame:
        description: 'the image name of the docker hub image'
        default: 'h2invent/jitsi-admin-main'
        required: true
        type: string
      directory:
        description: 'the dir of the Dockerfile image'
        default: '.'
        required: true
        type: string
      dockerfile_path:
        description: 'the name of the Dockerfile image'
        default: './Dockerfile'
        required: true
        type: string
      version:
        description: 'the version/tag of the Dockerfile image'
        required: true
        type: string
      tags:
        description: 'the tags of the Dockerfile image'
        required: true
        type: string
      registry:
        description: 'Login Registry'
        default: 'registry-1.docker.io'
        type: string
    secrets:
      dockerhub_username:
        required: true
      dockerhub_password:
        required: true

jobs:
  build_and_push:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Get current Username
        id: date
        run: echo "${{ secrets.dockerhub_password }}"

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.dockerhub_username }}
          password: ${{ secrets.dockerhub_password }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.directory }}
          file: ${{ inputs.dockerfile_path }}
          push: true
          build-args: VERSION=${{ inputs.version }}
          tags: ${{ inputs.tags }}
